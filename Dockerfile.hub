# 多阶段构建 - 前端构建阶段
FROM node:18-alpine AS frontend-build
WORKDIR /app/frontend
COPY frontend/ .
# 如果有package.json，安装依赖并构建
# RUN npm install && npm run build

# 后端构建阶段
FROM python:3.9-slim AS backend-build
WORKDIR /app/backend
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY backend/ .

# 最终运行阶段
FROM nginx:alpine

# 安装Python和依赖
RUN apk add --no-cache python3 py3-pip

# 复制后端代码和依赖
COPY --from=backend-build /usr/local/lib/python3.9/site-packages /usr/local/lib/python3.9/site-packages
COPY --from=backend-build /usr/local/bin /usr/local/bin
COPY --from=backend-build /app/backend /app/backend

# 复制前端代码
COPY --from=frontend-build /app/frontend /usr/share/nginx/html

# 复制nginx配置
COPY nginx/nginx.simple.conf /etc/nginx/nginx.conf

# 创建启动脚本
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'cd /app/backend && python3 app.py &' >> /start.sh && \
    echo 'nginx -g "daemon off;"' >> /start.sh && \
    chmod +x /start.sh

EXPOSE 80 5000

CMD ["/start.sh"]